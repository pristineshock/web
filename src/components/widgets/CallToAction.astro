---
import { Picture } from "@astrojs/image/components";
import { Icon } from "astro-icon";

interface CallToAction {
  text: string;
  href: string;
  icon?: string;
}

export interface Props {
  title?: string;
  description?: string;
  callToAction?: string | CallToAction;
}

const {
  title = await Astro.slots.render("title"),
  subtitle = await Astro.slots.render("subtitle"),
  callToAction = await Astro.slots.render("callToAction"),
} = Astro.props;
---

<section class="relative mb-10 max-h-[350px] w-full overflow-hidden bg-slate-800">
  <Picture
    src={import("~/assets/images/cta_background.png")}
    widths={[1440, 768]}
    sizes="(max-width: 1200px) 900px, 1600px"
    class="pointer-events-none absolute mx-auto min-h-[250px] w-full"
    alt="cta background"
    aspectRatio="3:3"
    loading="lazy"
    decoding="async"
  />
  <div class="mx-auto max-w-3xl rounded-md p-6 text-center">
    {title && <h2 class="leading-tighter font-heading mb-4 text-4xl font-bold tracking-tighter text-white md:text-4xl" set:html={title} />}
    {subtitle && <p class="text-muted text-xl text-slate-100" set:html={subtitle} />}
    {
      typeof callToAction === "string" ? (
        <Fragment set:html={callToAction} />
      ) : (
        callToAction &&
        callToAction.text &&
        callToAction.href && (
          <div class="mx-auto mt-6 max-w-xs">
            <a class="btn btn-primary w-full sm:w-auto" href={callToAction.href}>
              {callToAction.icon && <Icon name={callToAction.icon} class="mr-1 -ml-1.5 h-5 w-5" />}
              {callToAction.text}
            </a>
          </div>
        )
      )
    }
  </div>
</section>
